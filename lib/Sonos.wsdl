<?xml version="1.0" encoding="utf-8"?>

<!--
  Sonos Music Service WSDL definition
  Copyright (c) 2007 Sonos, Inc. All Rights Reserved

This document is licensed under the Creative Commons Attribution, Share-Alike
license, v3.0 (Unported) with the following modifications:
 
As clarified in the license, distribution of any software (source or binary)
that instantiates the API will require the party(ies) distributing such
software to publish the revised API and associated documentation, at no charge,
in accordance with the terms of the license. There is no requirement, however,
to publish the underlying code.
-->

<wsdl:definitions name="Sonos" 
             xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
             xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
             xmlns:xs="http://www.w3.org/2001/XMLSchema" 
             xmlns:tns="http://www.sonos.com/Services/1.1" 
             targetNamespace="http://www.sonos.com/Services/1.1">

  <wsdl:types>

    <xs:schema targetNamespace="http://www.sonos.com/Services/1.1"
               elementFormDefault="qualified">

      <xs:simpleType name="id">
        <xs:restriction base="xs:string">
          <xs:maxLength value="128" />
        </xs:restriction>
      </xs:simpleType>

      <xs:element name="id" type="tns:id" />
      
      <xs:element name="password">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="128"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      
      <xs:element name="username">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="128"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>

      <xs:element name="sessionId">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="128"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>

      <xs:element name="label">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="128"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>

      <xs:element name="login">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:username" />
            <xs:element ref="tns:password" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="credentials">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="deviceId" type="tns:id" minOccurs="0" />
            <xs:element name="deviceProvider" type="xs:string" minOccurs="0" />
            <xs:choice>
              <xs:element ref="tns:sessionId" />
              <xs:element ref="tns:login" />
            </xs:choice>
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:simpleType name="itemType">
		<xs:restriction base="xs:string">
			<xs:enumeration value="artist" />
			<xs:enumeration value="album" />
			<xs:enumeration value="genre" />
			<xs:enumeration value="playlist" />
			<xs:enumeration value="track" />
			<xs:enumeration value="search" />
			<xs:enumeration value="stream" />
			<xs:enumeration value="show" />
			<xs:enumeration value="program" />
			<xs:enumeration value="favorites" />
			<xs:enumeration value="favorite" />
			<xs:enumeration value="collection" />
			<xs:enumeration value="container" />
			<xs:enumeration value="albumList" />
			<xs:enumeration value="trackList" />
			<xs:enumeration value="artistTrackList" />
			<xs:enumeration value="other" />
		</xs:restriction>
	 </xs:simpleType>
	
	 <xs:element name="itemType" type="tns:itemType" />

	 <xs:complexType name="AbstractMedia" abstract="true">
		<xs:sequence>
			<xs:element ref="tns:id" />
			<xs:element ref="tns:itemType" />
			<xs:element name="title" type="xs:string" />
			<!--
			  Included for backwards compatability with MOAPI 1.0.  These
			  are currently all disregarded by the Sonos firmware.
			-->
			<xs:element name="language" type="xs:string" minOccurs="0" />
			<xs:element name="country" type="xs:string" minOccurs="0" />
			<xs:element name="genreId" type="xs:string" minOccurs="0" />
			<xs:element name="genre" type="xs:string" minOccurs="0" />
			<xs:element name="twitterId" type="xs:string" minOccurs="0" />
			<xs:element name="liveNow" type="xs:boolean" minOccurs="0" />
			<xs:element name="onDemand" type="xs:boolean" minOccurs="0" />

		</xs:sequence>
	 </xs:complexType>

    <xs:complexType name="mediaCollection">
	  <xs:complexContent>
	    <xs:extension base="tns:AbstractMedia">
	      <xs:sequence>

		  <!-- 
            Collections can optionally indicate a creator. For example,
            a collection could represent an album and "artist" would indicate
            the album artist. 
          -->
          
          <xs:element name="artist" type="xs:string" minOccurs="0"/>
          <xs:element name="artistId" type="tns:id" minOccurs="0" />

          <!-- 
            Indcates that the collection supports the getScrollIndices method
            if omitted, canScroll is assumed to be false 
          -->
          <xs:element name="canScroll" type="xs:boolean" minOccurs="0" />

          <!-- 
            Indicates that the collection can be "played" by enumerating
            using the "recursive" flag to obtain a flat list of all mediaMetadata items
            it contains. If omitted, canPlay is assumed to be false 
          -->
          <xs:element name="canPlay" type="xs:boolean" minOccurs="0" />

          <!-- 
            Indicates that the collection can be enumerated, using the
            collection id in a subsequent call to getMetadata. If omitted, canEnumerate 
            is assumed to be true -->
          <xs:element name="canEnumerate" type="xs:boolean" minOccurs="0" />

          <!-- 
            Indicates that the collection can be added to user favorites.
            if omitted, canAddToFavorites is assumed to be true 
          -->
          <xs:element name="canAddToFavorites" type="xs:boolean" minOccurs="0" />

          <!--
            Indicates that the container can be cached.  Defaults to true.  If
            false, container should not be cached even if getLastUpdate reports
            no changes
          -->
          <xs:element name="canCache" type="xs:boolean" minOccurs="0" />
          
          <!--
            Indicates that playback of this whole collection allows skip forward.
            Defaults to true.
          -->
          <xs:element name="canSkip" type="xs:boolean" minOccurs="0" />

          <!--
            This is really any artwork in the square album style.
          -->
          <xs:element name="albumArtURI" type="xs:anyURI" minOccurs="0"/>

		  <!--
			  Included for backwards compatability with MOAPI 1.0.  These
			  are currently all disregarded by the Sonos firmware.
		  -->
		  <xs:element name="authRequired" type="xs:boolean" minOccurs="0" />
		  <xs:element name="homogeneous" type="xs:boolean" minOccurs="0" />
		  <xs:element name="canAddToFavorite" type="xs:boolean" minOccurs="0" />
         </xs:sequence>
         <xs:attribute name="readOnly" type="xs:boolean" use="optional" default="true" />
      	</xs:extension>
	 </xs:complexContent>
   </xs:complexType>

      <xs:complexType name="trackMetadata">
        <xs:sequence>
          <xs:element name="artistId" type="tns:id" minOccurs="0" />
          <xs:element name="artist" type="xs:string" />
          <xs:element name="composerId" type="tns:id" minOccurs="0" />
          <xs:element name="composer" type="xs:string" minOccurs="0" />
          <xs:element name="albumId" type="tns:id" minOccurs="0" />
          <xs:element name="album" type="xs:string" minOccurs="0" />
          <xs:element name="albumArtistId" type="tns:id" minOccurs="0" />
          <xs:element name="albumArtist" type="xs:string" minOccurs="0" />
          <xs:element name="genreId" type="tns:id" minOccurs="0" />
          <xs:element name="genre" type="xs:string" minOccurs="0" />
          <xs:element name="duration" type="xs:int" minOccurs="0"/>
          <xs:element name="rating" type="xs:int" minOccurs="0" />
          <xs:element name="albumArtURI" type="xs:anyURI" minOccurs="0" />

          <!-- 
            Indicates that the collection can be played. If not present, the default
            value is "true". If "false" this flag indicates that the user does not have
            rights to stream the track.
          -->
          <xs:element name="canPlay" type="xs:boolean" minOccurs="0" />

          <!--
            Indicates that playback of this track allows skip forward.
            Defaults to true.
          -->
          <xs:element name="canSkip" type="xs:boolean" minOccurs="0" />

          <!--
            Indicates that this track can be added to the favorites.
          -->
          <xs:element name="canAddToFavorites" type="xs:boolean" minOccurs="0" />

        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="streamMetadata">
        <xs:sequence>
          <xs:element name="currentHost" type="xs:string" minOccurs="0" />
          <xs:element name="currentShowId" type="tns:id" minOccurs="0" />
          <xs:element name="currentShow" type="xs:string" minOccurs="0" />
          <xs:element name="secondsRemaining" type="xs:int" minOccurs="0" />
          <xs:element name="secondsToNextShow" type="xs:int" minOccurs="0" />
          <xs:element name="bitrate" type="xs:int" minOccurs="0" />
          <xs:element name="logo" type="xs:anyURI" minOccurs="0" />
			<!--
			  Included for backwards compatability with MOAPI 1.0.  These
			  are currently all disregarded by the Sonos firmware.
			-->
          <xs:element name="reliability" type="xs:anyURI" minOccurs="0" />
          <xs:element name="title" type="xs:anyURI" minOccurs="0" />
          <xs:element name="subtitle" type="xs:anyURI" minOccurs="0" />
          <xs:element name="nextShowSeconds" type="xs:anyURI" minOccurs="0" />

        </xs:sequence>
      </xs:complexType>
      
      <xs:complexType name="property">
        <xs:sequence>
          <xs:element name="name" type="xs:string" />
          <xs:element name="value" type="xs:string" />
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="dynamicData">
        <xs:sequence>
          <xs:element name="property" type="tns:property" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>
      
      <xs:complexType name="mediaMetadata">
		<xs:complexContent>
		  <xs:extension base="tns:AbstractMedia">
			<xs:sequence>
		 	 <xs:element name="mimeType" type="xs:string" />
			 <xs:choice>
		  	   <xs:element name="trackMetadata" type="tns:trackMetadata" />
			   <xs:element name="streamMetadata" type="tns:streamMetadata" />
			 </xs:choice>
			 <xs:element name="dynamic" type="tns:dynamicData" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
		  </xs:extension>
	    </xs:complexContent>
	  </xs:complexType>

      <xs:complexType name="mediaList">
        <xs:sequence>
          <xs:element name="index" type="xs:int" />
          <xs:element name="count" type="xs:int" />
          <xs:element name="total" type="xs:int" />
		  <xs:choice minOccurs="0" maxOccurs="unbounded">
			<xs:element name="mediaCollection" type="tns:mediaCollection" />
			<xs:element name="mediaMetadata" type="tns:mediaMetadata" />
		  </xs:choice>
		</xs:sequence>
      </xs:complexType>

      <xs:complexType name="lastUpdate" >
        <xs:sequence>
          <xs:element name="catalog" type="xs:string" />
          <xs:element name="favorites" type="xs:string" />
          <!-- Can optionally return a new polling interval in seconds -->
          <xs:element name="pollInterval" type="xs:int" minOccurs="0" />
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="relatedBrowse" >
        <xs:sequence>
          <xs:element ref="tns:id" />
          <xs:element name="type" type="xs:string" />
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="relatedText" >
        <xs:sequence>
          <xs:element ref="tns:id" />
          <xs:element name="type" type="xs:string" />
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="extendedMetadata">
        <xs:sequence>
          <xs:choice>
            <xs:element name="mediaCollection" type="tns:mediaCollection" minOccurs="0" maxOccurs="1" />
            <xs:element name="mediaMetadata" type="tns:mediaMetadata" minOccurs="0" maxOccurs="1" />
          </xs:choice>
          <xs:element name="relatedBrowse" type="tns:relatedBrowse" minOccurs="0" maxOccurs="unbounded" />
          <xs:element name="relatedText" type="tns:relatedText" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="itemRating">
        <xs:sequence>
          <xs:element name="shouldSkip" type="xs:boolean" minOccurs="0" />
          <xs:element name="messageStringId" type="xs:string" minOccurs="0" />
        </xs:sequence>
      </xs:complexType>

	  <xs:complexType name="httpHeader">
		<xs:sequence>
		  <xs:element name="header" type="xs:string" />
		  <xs:element name="value" type="xs:string" />
		</xs:sequence>
	  </xs:complexType>

	  <xs:complexType name="httpHeaders">
		<xs:sequence>
		  <xs:element name="httpHeader" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	  </xs:complexType>

      <xs:element name="getSessionId">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:username" />
            <xs:element ref="tns:password"  />
          </xs:sequence>            
        </xs:complexType>
      </xs:element>

      <xs:element name="getSessionIdResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="getSessionIdResult" type="tns:id" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMetadata">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:id" />
            <xs:element name="index" type="xs:int" />
            <xs:element name="count" type="xs:int" />
            <xs:element name="recursive" type="xs:boolean" minOccurs="0"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMetadataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="getMetadataResult" type="tns:mediaList" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      
      <xs:element name="getExtendedMetadata">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:id" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExtendedMetadataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="getExtendedMetadataResult" type="tns:extendedMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      
      <xs:element name="getExtendedMetadataText">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:id" />
            <xs:element name="type" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getExtendedMetadataTextResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="getExtendedMetadataTextResult" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      
      <xs:element name="rateItem">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:id" />
            <xs:element name="rating" type="xs:integer" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="rateItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="rateItemResult" type="tns:itemRating" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      
      <xs:element name="search">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:id" />
            <xs:element name="term" type="xs:string" />
            <xs:element name="index" type="xs:int" />
            <xs:element name="count" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="searchResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="searchResult" type="tns:mediaList" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="getMediaMetadata">
        <xs:complexType>
          <xs:sequence>
            <xs:element ref="tns:id" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="getMediaMetadataResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="getMediaMetadataResult" type="tns:mediaMetadata" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="getMediaURI">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="tns:id" />
          </xs:sequence>
        </xs:complexType>          
      </xs:element>
      <xs:element name="getMediaURIResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="getMediaURIResult" type="xs:anyURI" />
			<xs:element name="httpHeaders" type="tns:httpHeaders" minOccurs="0" maxOccurs="1" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="createItem">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="favorite" type="tns:id"/>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="createItemResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="createItemResult" type="tns:id" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="deleteItem">
        <xs:complexType>
          <xs:sequence>
			<xs:element name="favorite" type="tns:id" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="deleteItemResponse">
        <xs:complexType/>
      </xs:element>

      <xs:element name="getScrollIndices">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="id" type="tns:id" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="getScrollIndicesResponse">
        <xs:complexType>
          <xs:sequence>
            <!-- Result is a comma separated list of name value pairs 
                 representing the first letter prefix of an item and its 
                 position in the list (e.g A,0,B,123 etc.) -->
            <xs:element name="getScrollIndicesResult" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>

      <xs:element name="getLastUpdate">
        <xs:complexType />
      </xs:element>
      <xs:element name="getLastUpdateResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="getLastUpdateResult" type="tns:lastUpdate" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      
      <xs:element name="reportStatus">
        <xs:complexType>
          <xs:sequence>
			<xs:element name="id" type="tns:id" />
			<xs:element name="errorCode" type="xs:int" />
			<xs:element name="message" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="reportStatusResponse">
        <xs:complexType/>
      </xs:element>

      <xs:element name="setPlayedSeconds">
        <xs:complexType>
          <xs:sequence>
			<xs:element name="id" type="tns:id" />
			<xs:element name="seconds" type="xs:int" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="setPlayedSecondsResponse">
        <xs:complexType/>
      </xs:element>

    </xs:schema>
  </wsdl:types>
  
  <wsdl:message name="credentials">
    <wsdl:part name="credentials" element="tns:credentials" />
  </wsdl:message>

  <wsdl:message name="getSessionIdIn">
    <wsdl:part name="parameters" element="tns:getSessionId" />
  </wsdl:message>

  <wsdl:message name="getSessionIdOut">
    <wsdl:part name="parameters" element="tns:getSessionIdResponse" />
  </wsdl:message>

  <wsdl:message name="getMetadataIn">
          <wsdl:part name="parameters" element="tns:getMetadata" />
  </wsdl:message>

  <wsdl:message name="getMetadataOut">
          <wsdl:part name="parameters" element="tns:getMetadataResponse" />
  </wsdl:message>

  <wsdl:message name="getExtendedMetadataIn">
          <wsdl:part name="parameters" element="tns:getExtendedMetadata" />
  </wsdl:message>

  <wsdl:message name="getExtendedMetadataOut">
          <wsdl:part name="parameters" element="tns:getExtendedMetadataResponse" />
  </wsdl:message>

  <wsdl:message name="getExtendedMetadataTextIn">
          <wsdl:part name="parameters" element="tns:getExtendedMetadataText" />
  </wsdl:message>

  <wsdl:message name="getExtendedMetadataTextOut">
          <wsdl:part name="parameters" element="tns:getExtendedMetadataTextResponse" />
  </wsdl:message>

  <wsdl:message name="rateItemIn">
          <wsdl:part name="parameters" element="tns:rateItem" />
  </wsdl:message>

  <wsdl:message name="rateItemOut">
          <wsdl:part name="parameters" element="tns:rateItemResponse" />
  </wsdl:message>

  <wsdl:message name="searchIn">
    <wsdl:part name="parameters" element="tns:search" />
  </wsdl:message>

  <wsdl:message name="searchOut">
          <wsdl:part name="parameters" element="tns:searchResponse" />
  </wsdl:message>

  <wsdl:message name="getMediaMetadataIn">
    <wsdl:part name="parameters" element="tns:getMediaMetadata" />
  </wsdl:message>

  <wsdl:message name="getMediaMetadataOut">
    <wsdl:part name="parameters" element="tns:getMediaMetadataResponse" />
  </wsdl:message>

  <wsdl:message name="getMediaURIIn">
    <wsdl:part name="parameters" element="tns:getMediaURI" />
  </wsdl:message>

  <wsdl:message name="getMediaURIOut">
    <wsdl:part name="parameters" element="tns:getMediaURIResponse" />
  </wsdl:message>

  <wsdl:message name="getScrollIndicesIn">
    <wsdl:part name="parameters" element="tns:getScrollIndices" />
  </wsdl:message>

  <wsdl:message name="getScrollIndicesOut">
    <wsdl:part name="parameters" element="tns:getScrollIndicesResponse" />
  </wsdl:message>

  <wsdl:message name="createItemIn">
    <wsdl:part name="parameters" element="tns:createItem" />
  </wsdl:message>

  <wsdl:message name="createItemOut">
    <wsdl:part name="parameters" element="tns:createItemResponse" />
  </wsdl:message>

  <wsdl:message name="deleteItemIn">
    <wsdl:part name="parameters" element="tns:deleteItem" />
  </wsdl:message>

  <wsdl:message name="deleteItemOut">
    <wsdl:part name="parameters" element="tns:deleteItemResponse" />
  </wsdl:message>

  <wsdl:message name="getLastUpdateIn">
    <wsdl:part name="parameters" element="tns:getLastUpdate" />
  </wsdl:message>

  <wsdl:message name="getLastUpdateOut">
    <wsdl:part name="parameters" element="tns:getLastUpdateResponse" />
  </wsdl:message>

  <wsdl:message name="reportStatusIn">
    <wsdl:part name="parameters" element="tns:reportStatus" />
  </wsdl:message>

  <wsdl:message name="reportStatusOut">
    <wsdl:part name="parameters" element="tns:reportStatusResponse" />
  </wsdl:message>

  <wsdl:message name="setPlayedSecondsIn">
    <wsdl:part name="parameters" element="tns:setPlayedSeconds" />
  </wsdl:message>

  <wsdl:message name="setPlayedSecondsOut">
    <wsdl:part name="parameters" element="tns:setPlayedSecondsResponse" />
  </wsdl:message>

  <wsdl:portType name="SonosSoap">
    <wsdl:operation name="getSessionId">
      <wsdl:input message="tns:getSessionIdIn"/>
      <wsdl:output message="tns:getSessionIdOut"/>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <wsdl:input message="tns:getMetadataIn"/>
      <wsdl:output message="tns:getMetadataOut"/>
    </wsdl:operation>
    <wsdl:operation name="getExtendedMetadata">
      <wsdl:input message="tns:getExtendedMetadataIn"/>
      <wsdl:output message="tns:getExtendedMetadataOut"/>
    </wsdl:operation>
    <wsdl:operation name="getExtendedMetadataText">
      <wsdl:input message="tns:getExtendedMetadataTextIn"/>
      <wsdl:output message="tns:getExtendedMetadataTextOut"/>
    </wsdl:operation>
    <wsdl:operation name="rateItem">
      <wsdl:input message="tns:rateItemIn"/>
      <wsdl:output message="tns:rateItemOut"/>
    </wsdl:operation>
    <wsdl:operation name="search">
      <wsdl:input message="tns:searchIn"/>
      <wsdl:output message="tns:searchOut"/>
    </wsdl:operation>
    <wsdl:operation name="getMediaMetadata">
      <wsdl:input message="tns:getMediaMetadataIn"/>
      <wsdl:output message="tns:getMediaMetadataOut"/>
    </wsdl:operation>
    <wsdl:operation name="getMediaURI">
      <wsdl:input message="tns:getMediaURIIn"/>
      <wsdl:output message="tns:getMediaURIOut"/>
    </wsdl:operation>
    <wsdl:operation name="createItem">
      <wsdl:input message="tns:createItemIn"/>
      <wsdl:output message="tns:createItemOut"/>
    </wsdl:operation>
    <wsdl:operation name="deleteItem">
      <wsdl:input message="tns:deleteItemIn"/>
      <wsdl:output message="tns:deleteItemOut"/>
    </wsdl:operation>
    <wsdl:operation name="getScrollIndices">
      <wsdl:input message="tns:getScrollIndicesIn"/>
      <wsdl:output message="tns:getScrollIndicesOut"/>
    </wsdl:operation>    
    <wsdl:operation name="getLastUpdate">
      <wsdl:input message="tns:getLastUpdateIn"/>
      <wsdl:output message="tns:getLastUpdateOut"/>
    </wsdl:operation>
    <wsdl:operation name="reportStatus">
      <wsdl:input message="tns:reportStatusIn"/>
      <wsdl:output message="tns:reportStatusOut"/>
    </wsdl:operation>
    <wsdl:operation name="setPlayedSeconds">
      <wsdl:input message="tns:setPlayedSecondsIn"/>
      <wsdl:output message="tns:setPlayedSecondsOut"/>
    </wsdl:operation>
  </wsdl:portType>

  <wsdl:binding name="SonosSoap" type="tns:SonosSoap">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="getSessionId">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#getSessionId" style="document" />
      <wsdl:input>
		<soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMetadata">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#getMetadata" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getExtendedMetadata">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#getExtendedMetadata" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getExtendedMetadataText">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#getExtendedMetadataText" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="rateItem">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#rateItem" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="search">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#search" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMediaMetadata">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#getMediaMetadata" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getMediaURI">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#getMediaURI" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getScrollIndices">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#getScrollIndices" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createItem">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#createItem" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deleteItem">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#deleteItem" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getLastUpdate">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#getLastUpdate" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="reportStatus">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#reportStatus" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setPlayedSeconds">
      <soap:operation soapAction="http://www.sonos.com/Services/1.1#setPlayedSeconds" style="document" />
      <wsdl:input>
        <soap:header use="literal" message="tns:credentials" part="credentials" />
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
        
  <wsdl:service name="Sonos">
     <wsdl:port name="SonosSoap" binding="tns:SonosSoap">
        <soap:address location="http://moapi.sonos.com/Test/TestService.php"/>
     </wsdl:port>
  </wsdl:service>

</wsdl:definitions>
